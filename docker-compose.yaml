services:
  # # Database
  db:
    container_name: "db"
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vision_notify
      # POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - ./db/:/var/lib/postgresql/data/
    networks:
      - service-networks

  # # redis Camera control assignment
  cameracontrol:
    container_name: camera_control
    image: STCVideoAnalysis/camera_control:lastest
    build:
      context: ./camera_control
      dockerfile: CameraControlDockerfile
    stdin_open: true
    tty: true
    restart: always
    volumes:
      - ./camera_analysis/saved_images/stream/:/app/stream
      - ./camera_control:/app
      - ./frames/:/app/image
    environment:
      - WEB_SERVICE_URL=http://nginx:80
      - NUM_WORKERS= 1 #Change Number of Worker Here
    ports:
      - "15440:5000"
    # command: sh -c "flask --app appv1 run --no-debugger --host 0.0.0.0"
    command: gunicorn -w 4 -k gevent -b 0.0.0.0:5000 --timeout 120 --worker-connections 1000 --keep-alive 100 --log-level debug app:app
    networks:
      - service-networks

  # Lens image recognition
  cameraanalysis:
    container_name: camera_analysis
    image: STCVideoAnalysis/camera_analysis:latest
    build:
      context: ./camera_analysis
      dockerfile: CameraAnalysisDockerfile
    user: "0:0"
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - ./frames/:/app/frames
      - ./camera_analysis:/app
      - ./AImodels/:/app/model
    environment:
      - CAMERA_SERVICE_URL=http://cameracontrol:5000
      - WEB_SERVICE_URL=http://nginx:80
      - PLC_IP=192.168.8.207
    # privileged: true
    deploy:
      resources:
        reservations:
          # memory: 16Gb
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    #command: sh -c "sleep 30666"
    command: python appv2.py
    networks:
      - service-networks

networks:
  service-networks:
    driver: bridge
